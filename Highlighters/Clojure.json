{
  "Highlighter": {
    "Sample": [
      "; Hello, World! in Clojure\r\n",
      "\r\n",
      "(ns clojure.examples.hello\r\n",
      "   (:gen-class))\r\n",
      "(defn hello-world []\r\n",
      "   (println \"Hello, World!\"))\r\n",
      "(hello-world)"
    ],
    "MainRules": {
      "Attributes": {
        "Element": "Editor"
      },
      "SubRules": {
        "Range": [
          {
            "Type": "LineComment",
            "Attributes": {
              "Element": "Comment"
            },
            "Properties": {
              "CloseOnEndOfLine": true
            },
            "TokenRange": {
              "Open": ";"
            }
          },
          {
            "Type": "String",
            "Attributes": {
              "Element": "String"
            },
            "Properties": {
              "CloseOnEndOfLine": true
            },
            "TokenRange": {
              "Open": "\"",
              "Close": "\""
            },
            "SubRules": {
              "Range": [
                {
                  "Type": "String",
                  "Attributes": {
                    "Element": "String"
                  },
                  "Properties": {
                    "CloseOnEndOfLine": true,
                    "CloseOnTerm": true
                  },
                  "TokenRange": {
                    "Open": "\\\"",
                    "Close": ""
                  }
                },
                {
                  "Type": "String",
                  "Attributes": {
                    "Element": "String"
                  },
                  "Properties": {
                    "CloseOnEndOfLine": true,
                    "CloseOnTerm": true
                  },
                  "TokenRange": {
                    "Open": "\\\\",
                    "Close": ""
                  }
                }
              ]
            }
          },
          {
            "Type": "Value",
            "Attributes": {
              "Element": "Value"
            },
            "Delimiters": "*+=\\|&()[]{}`~!@,$%^:;\"><#_",
            "Properties": {
              "CloseOnEndOfLine": true,
              "CloseOnTerm": true
            },
            "TokenRange": {
              "Open": "#"
            }
          },
          {
            "Type": "Method",
            "Attributes": {
              "Element": "Method"
            },
            "Delimiters": "*+=\\|&()[]{}`~!@,$%^:;'\".><#_",
            "Properties": {
              "CloseOnEndOfLine": true,
              "CloseOnTerm": true
            },
            "TokenRange": {
              "Open": ":"
            }
          },
          {
            "Type": "Method",
            "Attributes": {
              "Element": "Method"
            },
            "Delimiters": "*+=\\|&()[]{}`~!@,$%^:;'\".><#_",
            "Properties": {
              "CloseOnEndOfLine": true,
              "CloseOnTerm": true
            },
            "TokenRange": {
              "Open": "\\"
            }
          },
          {
            "Type": "ReservedWord",
            "Attributes": {
              "Element": "ReservedWord"
            },
            "Properties": {
              "CloseOnEndOfLine": true,
              "AlternativeClose": [
                "{",
                "!",
                ":"
              ]
            },
            "TokenRange": {
              "Open": "(",
              "Close": " "
            }
          },
          {
            "Type": "Number",
            "Attributes": {
              "Element": "Number"
            },
            "Properties": {
              "CloseOnTerm": true,
              "CloseOnEndOfLine": true
            },
            "TokenRange": {
              "Open": "0",
              "OpenBreakType": "Term"
            }
          },
          {
            "Type": "HexNumber",
            "Attributes": {
              "Element": "HexNumber"
            },
            "AllowedCharacters": "0123456789abcdefABCDEF",
            "Properties": {
              "CloseOnTerm": true,
              "CloseOnEndOfLine": true
            },
            "TokenRange": {
              "Open": "0x",
              "OpenBreakType": "Any"
            }
          }
        ],
        "KeyList": [
          {
            "Type": "LogicalOperator",
            "Words": [
              "false",
              "nil",
              "true"
            ],
            "Attributes": {
              "Element": "LogicalOperator"
            }
          },
          {
            "Type": "Symbol",
            "Words": [
              "!",
              "-",
              "(",
              ")",
              "*",
              ",",
              ".",
              "/",
              ":",
              "[",
              "]",
              "{",
              "}",
              "+",
              "<",
              "=",
              ">"
            ],
            "Attributes": {
              "Element": "Symbol"
            }
          }
        ],
        "Set": [
          {
            "Type": "Numbers",
            "Symbols": ".0123456789e",
            "Attributes": {
              "Element": "Number"
            }
          }
        ]
      }
    }
  },
  "MatchingPair": {
    "Pairs": [
      {
        "OpenToken": "\"",
        "CloseToken": "\""
      },
      {
        "OpenToken": "(",
        "CloseToken": ")"
      },
      {
        "OpenToken": "[",
        "CloseToken": "]"
      },
      {
        "OpenToken": "{",
        "CloseToken": "}"
      }
    ]
  },
  "CompletionProposal": {
    "SkipRegion": [
      {
        "OpenToken": "\"",
        "CloseToken": "\"",
        "RegionType": "SingleLineString"
      },
      {
        "OpenToken": ";",
        "RegionType": "SingleLine"
      }
    ]
  }
}