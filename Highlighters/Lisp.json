{
  "Highlighter": {
    "Sample": [
      "; Hello, World! in Lisp\r\n",
      "\r\n",
      "(defun Hello ()\r\n",
      "  \"Hello, World!\"\r\n",
      ") "
    ],
    "MainRules": {
      "Attributes": {
        "Element": "Editor"
      },
      "SubRules": {
        "Range": [
          {
            "Type": "BlockComment",
            "Attributes": {
              "Element": "Comment"
            },
            "TokenRange": {
              "Open": "#|",
              "Close": "|#"
            }
          },
          {
            "Type": "LineComment",
            "Attributes": {
              "Element": "Comment"
            },
            "Properties": {
              "CloseOnEndOfLine": true
            },
            "TokenRange": {
              "Open": ";"
            }
          },
          {
            "Type": "String",
            "Attributes": {
              "Element": "String"
            },
            "Properties": {
              "CloseOnEndOfLine": true
            },
            "TokenRange": {
              "Open": "\"",
              "Close": "\""
            },
            "SubRules": {
              "Range": [
                {
                  "Type": "String",
                  "Attributes": {
                    "Element": "String"
                  },
                  "Properties": {
                    "CloseOnEndOfLine": true,
                    "CloseOnTerm": true
                  },
                  "TokenRange": {
                    "Open": "\\\"",
                    "Close": ""
                  }
                },
                {
                  "Type": "String",
                  "Attributes": {
                    "Element": "String"
                  },
                  "Properties": {
                    "CloseOnEndOfLine": true,
                    "CloseOnTerm": true
                  },
                  "TokenRange": {
                    "Open": "\\\\",
                    "Close": ""
                  }
                }
              ]
            }
          },
          {
            "Type": "Character",
            "Attributes": {
              "Element": "Character"
            },
            "TokenRange": {
              "Open": "#\\",
              "Close": " "
            }
          },
          {
            "Type": "Character",
            "Attributes": {
              "Element": "Character"
            },
            "Properties": {
              "CloseOnTerm": true
            },
            "TokenRange": {
              "Open": "#'"
            }
          },
          {
            "Type": "Method",
            "Attributes": {
              "Element": "MethodName"
            },
            "Properties": {
              "AlternativeClose": [
                "("
              ]
            },
            "TokenRange": {
              "Open": "defun",
              "Close": ""
            },
            "SubRules": {
              "KeyList": [
                {
                  "Type": "Symbol",
                  "Words": [
                    "("
                  ],
                  "Attributes": {
                    "Element": "Symbol"
                  }
                }
              ]
            }
          },
          {
            "Type": "Number",
            "Attributes": {
              "Element": "Number"
            },
            "Properties": {
              "CloseOnTerm": true,
              "CloseOnEndOfLine": true
            },
            "TokenRange": {
              "Open": "0",
              "OpenBreakType": "Term"
            }
          },
          {
            "Type": "HexNumber",
            "Attributes": {
              "Element": "HexNumber"
            },
            "AllowedCharacters": "0123456789abcdefABCDEF",
            "Properties": {
              "CloseOnTerm": true,
              "CloseOnEndOfLine": true
            },
            "TokenRange": {
              "Open": "0x",
              "OpenBreakType": "Any"
            }
          }
        ],
        "KeyList": [
          {
            "Type": "ReservedWord",
            "Words": [
              "and",
              "case",
              "do",
              "else",
              "eq",
              "if",
              "let",
              "loop",
              "neq",
              "nil",
              "null",
              "or",
              "when"
            ],
            "Attributes": {
              "Element": "ReservedWord"
            }
          },
          {
            "Type": "Method",
            "Words": [
              "append",
              "apply",
              "car",
              "cdr",
              "cond",
              "cons",
              "def",
              "defmacro",
              "defmethod",
              "defparameter",
              "defun",
              "eval",
              "format",
              "lambda",
              "list",
              "listp",
              "load",
              "memberp",
              "progn",
              "quote",
              "send",
              "setf",
              "setq",
              "t"
            ],
            "Attributes": {
              "Element": "Method"
            }
          },
          {
            "Type": "Symbol",
            "Words": [
              ":",
              "<",
              ">",
              "=",
              "/",
              "*",
              ".",
              ",",
              "-",
              "+",
              "(",
              ")",
              "[",
              "]",
              "{",
              "}"
            ],
            "Attributes": {
              "Element": "Symbol"
            }
          }
        ],
        "Set": [
          {
            "Type": "Numbers",
            "Symbols": ".0123456789",
            "Attributes": {
              "Element": "Number"
            }
          }
        ]
      }
    }
  },
  "MatchingPair": {
    "Pairs": [
      {
        "OpenToken": "\"",
        "CloseToken": "\""
      },
      {
        "OpenToken": "(",
        "CloseToken": ")"
      }
    ]
  },
  "CompletionProposal": {
    "SkipRegion": [
      {
        "OpenToken": "\"",
        "CloseToken": "\"",
        "RegionType": "SingleLineString"
      },
      {
        "OpenToken": ";",
        "RegionType": "SingleLine"
      },
      {
        "OpenToken": "#|",
        "CloseToken": "|#",
        "RegionType": "MultiLine"
      }
    ]
  }
}