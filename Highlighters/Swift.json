{
  "Highlighter": {
    "Sample": [
      "// Hello, World! in Swift\r\n",
      "\r\n",
      "print(\"Hello, World!\")"
    ],
    "MainRules": {
      "Attributes": {
        "Element": "Editor"
      },
      "SubRules": {
        "Range": [
          {
            "Type": "BlockComment",
            "Attributes": {
              "Element": "Comment"
            },
            "TokenRange": {
              "Open": "/*",
              "Close": "*/"
            }
          },
          {
            "Type": "LineComment",
            "Attributes": {
              "Element": "Comment"
            },
            "Properties": {
              "CloseOnEndOfLine": true
            },
            "TokenRange": {
              "Open": "//"
            }
          },
					{
            "Type": "String",
            "Attributes": {
              "Element": "String"
            },
            "Properties": {
              "OpenEndOfLine": true
            },
            "TokenRange": {
              "Open": "\"\"\"",
              "Close": "\"\"\""
            }
          },
          {
            "Type": "String",
            "Attributes": {
              "Element": "String"
            },
            "TokenRange": {
              "Open": "\"",
              "Close": "\""
            },
            "SubRules": {
              "Range": [
                {
                  "Type": "String",
                  "Attributes": {
                    "Element": "String"
                  },
                  "Properties": {
                    "CloseOnEndOfLine": true,
                    "CloseOnTerm": true
                  },
                  "TokenRange": {
                    "Open": "\\\"",
                    "Close": ""
                  }
                },
                {
                  "Type": "String",
                  "Attributes": {
                    "Element": "String"
                  },
                  "Properties": {
                    "CloseOnEndOfLine": true,
                    "CloseOnTerm": true
                  },
                  "TokenRange": {
                    "Open": "\\\\",
                    "Close": ""
                  }
                }
              ]
            }
          },
          {
            "Type": "Number",
            "Attributes": {
              "Element": "Number"
            },
            "Properties": {
              "CloseOnTerm": true,
              "CloseOnEndOfLine": true
            },
            "TokenRange": {
              "Open": "0",
              "OpenBreakType": "Term"
            }
          },
          {
            "Type": "HexNumber",
            "Attributes": {
              "Element": "HexNumber"
            },
            "AllowedCharacters": "0123456789abcdefABCDEF",
            "Properties": {
              "CloseOnTerm": true,
              "CloseOnEndOfLine": true
            },
            "TokenRange": {
              "Open": "0x",
              "OpenBreakType": "Any"
            }
          },
          {
            "Type": "Directive",
            "Attributes": {
              "Element": "Directive"
            },
            "Properties": {
              "CloseOnTerm": true,
              "CloseOnEndOfLine": true
            },
            "TokenRange": {
              "Open": "#"
            }
          }
        ],
        "KeyList": [
          {
            "Type": "ReservedWord",
            "Words": [
              "any",
              "as",
              "associatedtype",
              "associativity",
              "await",
              "break",
              "case",
              "catch",
              "class",
              "continue",
              "convenience",
              "default",
              "defer",
              "deinit",
              "didset",
              "do",
              "dynamic",
              "else",
              "enum",
              "extension",
              "fallthrough",
              "false",
              "fileprivate",
              "final",
              "for",
              "func",
              "get",
              "if",
              "import",
              "in",
              "indirect",
              "infix",
              "init",
              "inout",
              "internal",
              "is",
              "lazy",
              "left",
              "let",
              "mutating",
              "nil",
              "none",
              "nonmutating",
              "open",
              "operator",
              "optional",
              "override",
              "postfix",
              "precedence",
              "precedencegroup",
              "prefix",
              "private",
              "protocol",
              "public",
              "repeat",
              "required",
              "rethrows",
              "return",
              "right",
              "self",
              "set",
              "some",
              "static",
              "struct",
              "subscript",
              "super",
              "switch",
              "throw",
              "throws",
              "true",
              "try",
              "type",
              "typealias",
              "unowned",
              "var",
              "void",
              "weak",
              "while",
              "willset"
            ],
            "Attributes": {
              "Element": "ReservedWord"
            }
          },
          {
            "Type": "Symbol",
            "Words": [
              "-",
              "(",
              ")",
              "*",
              ",",
              ".",
              "/",
              ":",
              ";",
              "[",
              "]",
              "{",
              "}",
              "+",
              "<",
              "=",
              ">",
              "!",
              "#",
              "&",
              "?",
              "@"
            ],
            "Attributes": {
              "Element": "Symbol"
            }
          }
        ],
        "Set": [
          {
            "Type": "Numbers",
            "Symbols": ".0123456789",
            "Attributes": {
              "Element": "Number"
            }
          }
        ]
      }
    }
  },
  "CodeFolding": {
    "Ranges": [
      {
        "Options": {
          "StringEscapeChar": "\\"
        },
        "SkipRegion": [
          {
            "OpenToken": "\"",
            "CloseToken": "\"",
            "RegionType": "SingleLineString"
          },
          {
            "OpenToken": "//",
            "RegionType": "SingleLine"
          },
          {
            "OpenToken": "/*",
            "CloseToken": "*/",
            "RegionType": "MultiLine"
          }
        ],
        "FoldRegion": [
          {
            "OpenToken": "{",
            "CloseToken": "}",
            "Properties": {
              "BreakCharFollows": false
            }
          }
        ]
      }
    ]
  },
  "MatchingPair": {
    "Pairs": [
      {
        "OpenToken": "\"",
        "CloseToken": "\""
      },
      {
        "OpenToken": "(",
        "CloseToken": ")"
      },
      {
        "OpenToken": "[",
        "CloseToken": "]"
      },
      {
        "OpenToken": "{",
        "CloseToken": "}"
      }
    ]
  },
  "CompletionProposal": {
    "SkipRegion": [
      {
        "OpenToken": "\"",
        "CloseToken": "\"",
        "RegionType": "SingleLineString"
      },
      {
        "OpenToken": "//",
        "RegionType": "SingleLine"
      },
      {
        "OpenToken": "/*",
        "CloseToken": "*/",
        "RegionType": "MultiLine"
      }
    ]
  }
}